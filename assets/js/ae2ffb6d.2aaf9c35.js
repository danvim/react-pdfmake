(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[525],{9351:(t,s,e)=>{var n={"./Heading.json":[5621,621],"./PdfDocument.json":[5720,720],"./PdfFooter.json":[4740,740],"./PdfHeader.json":[9508,508],"./PdfPreview.json":[54,54],"./PdfTable.json":[5762,762],"./plugin-route-context-module-100.json":[8462,462]};function o(t){if(!e.o(n,t))return Promise.resolve().then((()=>{var s=new Error("Cannot find module '"+t+"'");throw s.code="MODULE_NOT_FOUND",s}));var s=n[t],o=s[0];return e.e(s[1]).then((()=>e.t(o,19)))}o.keys=()=>Object.keys(n),o.id=9351,t.exports=o},2781:(t,s,e)=>{"use strict";e.r(s),e.d(s,{assets:()=>c,contentTitle:()=>p,default:()=>y,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var n=e(1527),o=e(8627),l=e(3388);const a={sidebar_position:3,sidebar_label:"<PdfFooter>"},p="<PdfFooter>",r={id:"jsx/pdf-components/pdf-footer",title:"&lt;PdfFooter>",description:"Props",source:"@site/docs/jsx/pdf-components/pdf-footer.mdx",sourceDirName:"jsx/pdf-components",slug:"/jsx/pdf-components/pdf-footer",permalink:"/react-pdfmake-reconciler/docs/jsx/pdf-components/pdf-footer",draft:!1,unlisted:!1,editUrl:"https://github.com/danvim/react-pdfmake-reconciler/tree/master/docs/docs/jsx/pdf-components/pdf-footer.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"<PdfFooter>"},sidebar:"tutorialSidebar",previous:{title:"<PdfHeader>",permalink:"/react-pdfmake-reconciler/docs/jsx/pdf-components/pdf-header"},next:{title:"<PdfTable>",permalink:"/react-pdfmake-reconciler/docs/jsx/pdf-components/pdf-table"}},c={},d=[{value:"Props",id:"props",level:2},{value:"Example",id:"example",level:2}];function i(t){const s={div:"div",h1:"h1",h2:"h2",...(0,o.a)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"pdffooter",children:"<PdfFooter>"}),"\n",(0,n.jsx)(s.h2,{id:"props",children:"Props"}),"\n",(0,n.jsx)(l.n,{name:"PdfFooter"}),"\n",(0,n.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(s.div,{dangerouslySetInnerHTML:{__html:'<pre class="shiki light-plus twoslash lsp" style="background-color: #FFFFFF; color: #000000"><div class="language-id">tsx</div><div class=\'code-container\'><code><div class=\'line\'><span style="color: #AF00DB">import</span><span style="color: #000000"> { </span><span style="color: #001080"><data-lsp lsp=\'(alias) const PdfFooter: React.FC&lt;PdfMarginContentProps>&#10;import PdfFooter\' >PdfFooter</data-lsp></span><span style="color: #000000"> } </span><span style="color: #AF00DB">from</span><span style="color: #000000"> </span><span style="color: #A31515">"react-pdfmake-reconciler"</span><span style="color: #000000">;</span></div><div class=\'line\'>&nbsp;</div><div class=\'line\'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp=\'const staticFooter: React.JSX.Element\' >staticFooter</data-lsp></span><span style="color: #000000"> = (</span></div><div class=\'line\'><span style="color: #000000">  </span><span style="color: #800000">&lt;</span><span style="color: #267F99"><data-lsp lsp=\'(alias) const PdfFooter: React.FC&lt;PdfMarginContentProps>&#10;import PdfFooter\' >PdfFooter</data-lsp></span><span style="color: #800000">&gt;</span></div><div class=\'line\'><span style="color: #000000">    </span><span style="color: #800000">&lt;</span><span style="color: #267F99"><data-lsp lsp=\'(property) PdfElements["pdf-text"]: PdfPropsWithChildren&lt;Omit&lt;ContentText, "text"> | Omit&lt;ContentLink, "text"> | Omit&lt;ContentAnchor, "text"> | Omit&lt;ContentTocItem, "text">>\' >pdf-text</data-lsp></span><span style="color: #800000">&gt;</span><span style="color: #000000">Hello world!</span><span style="color: #800000">&lt;/</span><span style="color: #267F99"><data-lsp lsp=\'(property) PdfElements["pdf-text"]: PdfPropsWithChildren&lt;Omit&lt;ContentText, "text"> | Omit&lt;ContentLink, "text"> | Omit&lt;ContentAnchor, "text"> | Omit&lt;ContentTocItem, "text">>\' >pdf-text</data-lsp></span><span style="color: #800000">&gt;</span></div><div class=\'line\'><span style="color: #000000">  </span><span style="color: #800000">&lt;/</span><span style="color: #267F99"><data-lsp lsp=\'(alias) const PdfFooter: React.FC&lt;PdfMarginContentProps>&#10;import PdfFooter\' >PdfFooter</data-lsp></span><span style="color: #800000">&gt;</span></div><div class=\'line\'><span style="color: #000000">);</span></div><div class=\'line\'>&nbsp;</div><div class=\'line\'><span style="color: #0000FF">const</span><span style="color: #000000"> </span><span style="color: #795E26"><data-lsp lsp=\'const dynamicFooter: React.JSX.Element\' >dynamicFooter</data-lsp></span><span style="color: #000000"> = (</span></div><div class=\'line\'><span style="color: #000000">  </span><span style="color: #800000">&lt;</span><span style="color: #267F99"><data-lsp lsp=\'(alias) const PdfFooter: React.FC&lt;PdfMarginContentProps>&#10;import PdfFooter\' >PdfFooter</data-lsp></span><span style="color: #800000">&gt;</span></div><div class=\'line\'><span style="color: #000000">    </span><span style="color: #0000FF">{</span><span style="color: #000000FF">(</span><span style="color: #001080"><data-lsp lsp=\'(parameter) currentPage: number\' >currentPage</data-lsp></span><span style="color: #000000FF">, </span><span style="color: #001080"><data-lsp lsp=\'(parameter) pageCount: number\' >pageCount</data-lsp></span><span style="color: #000000FF">, </span><span style="color: #001080"><data-lsp lsp=\'(parameter) pageSize: ContextPageSize\' >pageSize</data-lsp></span><span style="color: #000000FF">) </span><span style="color: #0000FF">=&gt;</span><span style="color: #000000FF"> (</span></div><div class=\'line\'><span style="color: #000000FF">      </span><span style="color: #800000">&lt;</span><span style="color: #267F99"><data-lsp lsp=\'(property) PdfElements["pdf-text"]: PdfPropsWithChildren&lt;Omit&lt;ContentText, "text"> | Omit&lt;ContentLink, "text"> | Omit&lt;ContentAnchor, "text"> | Omit&lt;ContentTocItem, "text">>\' >pdf-text</data-lsp></span><span style="color: #800000">&gt;</span></div><div class=\'line\'><span style="color: #000000FF">        Page </span><span style="color: #0000FF">{</span><span style="color: #001080"><data-lsp lsp=\'(parameter) currentPage: number\' >currentPage</data-lsp></span><span style="color: #0000FF">}</span><span style="color: #000000FF"> / </span><span style="color: #0000FF">{</span><span style="color: #001080"><data-lsp lsp=\'(parameter) pageCount: number\' >pageCount</data-lsp></span><span style="color: #0000FF">}</span></div><div class=\'line\'><span style="color: #000000FF">      </span><span style="color: #800000">&lt;/</span><span style="color: #267F99"><data-lsp lsp=\'(property) PdfElements["pdf-text"]: PdfPropsWithChildren&lt;Omit&lt;ContentText, "text"> | Omit&lt;ContentLink, "text"> | Omit&lt;ContentAnchor, "text"> | Omit&lt;ContentTocItem, "text">>\' >pdf-text</data-lsp></span><span style="color: #800000">&gt;</span></div><div class=\'line\'><span style="color: #000000FF">    )</span><span style="color: #0000FF">}</span></div><div class=\'line\'><span style="color: #000000">  </span><span style="color: #800000">&lt;/</span><span style="color: #267F99"><data-lsp lsp=\'(alias) const PdfFooter: React.FC&lt;PdfMarginContentProps>&#10;import PdfFooter\' >PdfFooter</data-lsp></span><span style="color: #800000">&gt;</span></div><div class=\'line\'><span style="color: #000000">);</span></div></code></div></pre>\n<pre class="shiki dark-plus twoslash lsp" style="background-color: #1E1E1E; color: #D4D4D4"><div class="language-id">tsx</div><div class=\'code-container\'><code><div class=\'line\'><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> { </span><span style="color: #9CDCFE"><data-lsp lsp=\'(alias) const PdfFooter: React.FC&lt;PdfMarginContentProps>&#10;import PdfFooter\' >PdfFooter</data-lsp></span><span style="color: #D4D4D4"> } </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">"react-pdfmake-reconciler"</span><span style="color: #D4D4D4">;</span></div><div class=\'line\'>&nbsp;</div><div class=\'line\'><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA"><data-lsp lsp=\'const staticFooter: React.JSX.Element\' >staticFooter</data-lsp></span><span style="color: #D4D4D4"> = (</span></div><div class=\'line\'><span style="color: #D4D4D4">  </span><span style="color: #808080">&lt;</span><span style="color: #4EC9B0"><data-lsp lsp=\'(alias) const PdfFooter: React.FC&lt;PdfMarginContentProps>&#10;import PdfFooter\' >PdfFooter</data-lsp></span><span style="color: #808080">&gt;</span></div><div class=\'line\'><span style="color: #D4D4D4">    </span><span style="color: #808080">&lt;</span><span style="color: #4EC9B0"><data-lsp lsp=\'(property) PdfElements["pdf-text"]: PdfPropsWithChildren&lt;Omit&lt;ContentText, "text"> | Omit&lt;ContentLink, "text"> | Omit&lt;ContentAnchor, "text"> | Omit&lt;ContentTocItem, "text">>\' >pdf-text</data-lsp></span><span style="color: #808080">&gt;</span><span style="color: #D4D4D4">Hello world!</span><span style="color: #808080">&lt;/</span><span style="color: #4EC9B0"><data-lsp lsp=\'(property) PdfElements["pdf-text"]: PdfPropsWithChildren&lt;Omit&lt;ContentText, "text"> | Omit&lt;ContentLink, "text"> | Omit&lt;ContentAnchor, "text"> | Omit&lt;ContentTocItem, "text">>\' >pdf-text</data-lsp></span><span style="color: #808080">&gt;</span></div><div class=\'line\'><span style="color: #D4D4D4">  </span><span style="color: #808080">&lt;/</span><span style="color: #4EC9B0"><data-lsp lsp=\'(alias) const PdfFooter: React.FC&lt;PdfMarginContentProps>&#10;import PdfFooter\' >PdfFooter</data-lsp></span><span style="color: #808080">&gt;</span></div><div class=\'line\'><span style="color: #D4D4D4">);</span></div><div class=\'line\'>&nbsp;</div><div class=\'line\'><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA"><data-lsp lsp=\'const dynamicFooter: React.JSX.Element\' >dynamicFooter</data-lsp></span><span style="color: #D4D4D4"> = (</span></div><div class=\'line\'><span style="color: #D4D4D4">  </span><span style="color: #808080">&lt;</span><span style="color: #4EC9B0"><data-lsp lsp=\'(alias) const PdfFooter: React.FC&lt;PdfMarginContentProps>&#10;import PdfFooter\' >PdfFooter</data-lsp></span><span style="color: #808080">&gt;</span></div><div class=\'line\'><span style="color: #D4D4D4">    </span><span style="color: #569CD6">{</span><span style="color: #D4D4D4">(</span><span style="color: #9CDCFE"><data-lsp lsp=\'(parameter) currentPage: number\' >currentPage</data-lsp></span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE"><data-lsp lsp=\'(parameter) pageCount: number\' >pageCount</data-lsp></span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE"><data-lsp lsp=\'(parameter) pageSize: ContextPageSize\' >pageSize</data-lsp></span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> (</span></div><div class=\'line\'><span style="color: #D4D4D4">      </span><span style="color: #808080">&lt;</span><span style="color: #4EC9B0"><data-lsp lsp=\'(property) PdfElements["pdf-text"]: PdfPropsWithChildren&lt;Omit&lt;ContentText, "text"> | Omit&lt;ContentLink, "text"> | Omit&lt;ContentAnchor, "text"> | Omit&lt;ContentTocItem, "text">>\' >pdf-text</data-lsp></span><span style="color: #808080">&gt;</span></div><div class=\'line\'><span style="color: #D4D4D4">        Page </span><span style="color: #569CD6">{</span><span style="color: #9CDCFE"><data-lsp lsp=\'(parameter) currentPage: number\' >currentPage</data-lsp></span><span style="color: #569CD6">}</span><span style="color: #D4D4D4"> / </span><span style="color: #569CD6">{</span><span style="color: #9CDCFE"><data-lsp lsp=\'(parameter) pageCount: number\' >pageCount</data-lsp></span><span style="color: #569CD6">}</span></div><div class=\'line\'><span style="color: #D4D4D4">      </span><span style="color: #808080">&lt;/</span><span style="color: #4EC9B0"><data-lsp lsp=\'(property) PdfElements["pdf-text"]: PdfPropsWithChildren&lt;Omit&lt;ContentText, "text"> | Omit&lt;ContentLink, "text"> | Omit&lt;ContentAnchor, "text"> | Omit&lt;ContentTocItem, "text">>\' >pdf-text</data-lsp></span><span style="color: #808080">&gt;</span></div><div class=\'line\'><span style="color: #D4D4D4">    )</span><span style="color: #569CD6">}</span></div><div class=\'line\'><span style="color: #D4D4D4">  </span><span style="color: #808080">&lt;/</span><span style="color: #4EC9B0"><data-lsp lsp=\'(alias) const PdfFooter: React.FC&lt;PdfMarginContentProps>&#10;import PdfFooter\' >PdfFooter</data-lsp></span><span style="color: #808080">&gt;</span></div><div class=\'line\'><span style="color: #D4D4D4">);</span></div></code></div></pre>'}})]})}function y(t={}){const{wrapper:s}={...(0,o.a)(),...t.components};return s?(0,n.jsx)(s,{...t,children:(0,n.jsx)(i,{...t})}):i(t)}},7358:(t,s,e)=>{"use strict";e.d(s,{U:()=>o});var n=e(959);const o=t=>{const[s,o]=(0,n.useState)(null);return(0,n.useEffect)((()=>{let s=!1;return e(9351)(`./${t}.json`).then((t=>{s||(s=!0,o(t.default))})).catch(console.error),()=>{s=!0}}),[t]),s}},3388:(t,s,e)=>{"use strict";e.d(s,{n:()=>l});var n=e(7358),o=e(1527);const l=t=>{let{name:s}=t;const e=(0,n.U)(s);if(!e)return null;const l=Object.entries(e),a=[],p=new Set,r=[];for(const[n,o]of l)o.parent?.fileName.includes("@types/react")?(a.push([n,o]),p.add(o.parent.name)):r.push([n,o]);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)("p",{children:["This type also extends: ",Array.from(p).join(", ")]}),(0,o.jsxs)("table",{children:[(0,o.jsx)("thead",{children:(0,o.jsxs)("tr",{children:[(0,o.jsx)("th",{children:"Name"}),(0,o.jsx)("th",{children:"Type"}),(0,o.jsx)("th",{children:"Required"}),(0,o.jsx)("th",{children:"Description"})]})}),(0,o.jsx)("tbody",{children:r.map((t=>{let[s,e]=t;return(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{children:(0,o.jsx)("code",{children:s})}),(0,o.jsx)("td",{children:(0,o.jsx)("code",{children:e.type?.name})}),(0,o.jsx)("td",{children:e.required?"Yes":"No"}),(0,o.jsx)("td",{children:e.description})]},s)}))})]})]})}},8627:(t,s,e)=>{"use strict";e.d(s,{Z:()=>p,a:()=>a});var n=e(959);const o={},l=n.createContext(o);function a(t){const s=n.useContext(l);return n.useMemo((function(){return"function"==typeof t?t(s):{...s,...t}}),[s,t])}function p(t){let s;return s=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:a(t.components),n.createElement(l.Provider,{value:s},t.children)}}}]);