"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[206],{1237:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>c,metadata:()=>a,toc:()=>p});var r=t(5250),o=t(4012);function s(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"react-pdfmake-reconciler",children:"React pdfmake Reconciler"}),"\n",(0,r.jsx)(n.p,{children:"This package lets you create PDFs using pdfmake and React."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/react-pdfmake-reconciler",children:(0,r.jsx)(n.img,{src:"https://img.shields.io/npm/v/react-pdfmake-reconciler.svg?logo=npm",alt:"npm version"})})}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(n.p,{children:["This package is available on ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/react-pdfmake-reconciler",children:"NPM"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"npm i react-pdfmake-reconciler\n"})}),"\n",(0,r.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Write complex PDF in JSX. Render JSX into pdfmake content structure."}),"\n",(0,r.jsxs)(n.li,{children:["Utilize React features like:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Context. Note that outside React contexts do not penetrate into PDF renderer."}),"\n",(0,r.jsx)(n.li,{children:"Components"}),"\n",(0,r.jsx)(n.li,{children:"Hooks"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Working React update loop, (although it is unlikely to trigger user events inside PDF.), e.g.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"async setState calls"}),"\n",(0,r.jsx)(n.li,{children:"useEffect call"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["TypeScript typing for pdfmake Components (",(0,r.jsx)(n.code,{children:"<pdf-*>"})," components)"]}),"\n",(0,r.jsx)(n.li,{children:"React Developer Tools support"}),"\n",(0,r.jsx)(n.li,{children:"Styled API"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"React Developer Tools Demo",src:t(9798).Z+"",width:"1231",height:"936"})}),"\n",(0,r.jsx)(n.h2,{id:"running-demo",children:"Running demo"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"pnpm i\npnpm dev\n"})}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.code,{children:"/demo"})," and ",(0,r.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:t(7022).Z+"",children:"tests"})," for more extensive examples."]}),"\n",(0,r.jsx)(n.h3,{id:"simple-examples",children:"Simple examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"/// <reference types=\"react-pdfmake-reconciler/react-jsx\" />\n\nimport { PdfRenderer } from \"react-pdfmake-reconciler/PdfRenderer\";\n\nconst { unmount } = PdfRenderer.render(\n  <pdf-text bold>Hello World!</pdf-text>,\n  (document) => console.log(document),\n);\n\n/*\nConsole:\n{\n  content: {\n    $__reactPdfMakeType: 'pdf-text',\n    text: 'Hello World!',\n    bold: true\n  }\n}\n*/\n\n// Call unmount to detach node tree.\nunmount();\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import { PdfRenderer } from "react-pdfmake-reconciler/PdfRenderer";\n\nconst document = PdfRenderer.renderOnce(<pdf-text bold>Hello World!</pdf-text>);\n'})}),"\n",(0,r.jsx)(n.h3,{id:"pdf-elements",children:"PDF elements"}),"\n",(0,r.jsxs)(n.p,{children:["Newly defined intrinsic elements by this package have the ",(0,r.jsx)(n.code,{children:"pdf-"})," prefix. Roughly speaking, each type of pdfmake content object corresponds to one element type, where the property specifying the ",(0,r.jsx)(n.code,{children:"Content"})," is mapped to the ",(0,r.jsx)(n.code,{children:"children"})," prop. For example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'const pdfMakeContent = {\n  text: "GitHub",\n  link: "https://www.github.com",\n};\n\n// is mapped to\n\nconst pdfNode = <pdf-text link="https://www.github.com">GitHub</pdf-text>;\n'})}),"\n",(0,r.jsxs)(n.p,{children:["There are also virtual element types. For more information, read ",(0,r.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:t(2894).Z+"",children:"JSDocs in types"})," for more information."]}),"\n",(0,r.jsx)(n.h3,{id:"document-header-and-footer",children:"Document, Header, and Footer"}),"\n",(0,r.jsxs)(n.p,{children:["You can easily define extra document definition props straight inside your JSX using ",(0,r.jsx)(n.code,{children:"<PdfDocument>"}),". It is optional to put the body of the document inside this component."]}),"\n",(0,r.jsxs)(n.p,{children:["Implemented using React Portals, you can define static/dynamic header and footer using ",(0,r.jsx)(n.code,{children:"<PdfHeader>"})," and ",(0,r.jsx)(n.code,{children:"<PdfFooter>"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"These components can appear anywhere within your JSX structure, although you may follow this convention for a better looking structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import { PdfDocument, PdfHeader, PdfFooter } from "react-pdfmake-reconciler";\n\nconst pdfNode = (\n  <PdfDocument orientation="landscape">\n    {/* Example static header */}\n    <PdfHeader>This is a header</PdfHeader>\n    {/* Example dynmaic footer */}\n    <PdfFooter>\n      {(pageNumber, pageCount) => (\n        <pdf-text>\n          Page {pageNumber} / {pageCount}\n        </pdf-text>\n      )}\n    </PdfFooter>\n    {bodyGoesHere}\n  </PdfDocument>\n);\n'})}),"\n",(0,r.jsx)(n.h3,{id:"pdfpreview",children:"PdfPreview"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"<PdfPreview>"})," provides an easy way to render your React pdfmake Reconciler JSX in the browser. You can also debug your PDF JSX using the ",(0,r.jsx)(n.a,{href:"https://chromewebstore.google.com/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi",children:"React Developer Tools"})," browser extension."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import { FC, StrictMode } from "react";\nimport { PdfPreview } from "react-pdfmake-reconciler";\n\nconst App: FC = () => (\n  <div>\n    <PdfPreview>\n      {/* Optional */}\n      <StrictMode>\n        {/* Only use components that resolves to pdf-* components from here on out. DOM elements won\'t work. */}\n        <pdf-text>Hello World!</pdf-text>\n      </StrictMode>\n    </PdfPreview>\n  </div>\n);\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}const c={sidebar_position:1},i="Introduction",a={id:"intro",title:"Introduction",description:"",source:"@site/docs/intro.mdx",sourceDirName:".",slug:"/intro",permalink:"/react-pdfmake-reconciler/docs/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/danvim/react-pdfmake-reconciler/tree/master/docs/docs/intro.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"PdfRenderer",permalink:"/react-pdfmake-reconciler/docs/renderer"}},l={},p=[];function h(e){const n={h1:"h1",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n","\n","\n",(0,r.jsx)(d,{})]})}function m(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},7022:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/files/PdfRenderer.test-57d3c6b91b2c856b230e45da202c4baa.tsx"},2894:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/files/PdfElements-cdd4574fea0b24b9aab275ef4ee57d34.ts"},9798:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/react-devtools-demo-c4bcca374159f7ff7f0db993faada603.png"},4012:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>d});var r=t(79);const o={},s=r.createContext(o);function d(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);